; 2600 for newbies
; Session 15 - More Playfield
;
; Exercise 1 -  Shadow RAM technique with CTRLPF example.
;  The following exercise uses a part of RAM as a 
;  shadow copy of the CTRLPF register. The objective
;  is to practive the use of this technique by
;  modifying the CTRLPF register using its shadow copy.
;  The reflection bit will be reversed at the middle
;  of the scanline loop and turned back to normal
;  at the end of it.
  processor 6502
  include "vcs.h"
  include "macro.h"
  seg
  org $F000
CTRLPF_shadow = $82; Variable will hold a copy of the value of CTRLPF .
Reset
  ldx #0
  lda #0
Clear
  sta 0,x
  inx
  bne Clear
  lda #$45
  sta COLUPF
  lda #%00000001    ; Set shadow copy to "mirror" mode.
  sta CTRLPF_shadow
StartOfFrame
  lda #0
  sta VBLANK
  lda #2
  sta VSYNC
  sta WSYNC
  sta WSYNC
  sta WSYNC
  lda #0
  sta VSYNC
  ldx #0 ; x will count the scanlines
  lda CTRLPF_shadow; Load shadow ram copy into real CTRLPF
  sta CTRLPF  
VerticalBlank
  sta WSYNC
  inx
  cpx #37
  bne VerticalBlank
  ldx #0
  lda #%11111111
  sta PF0
  sta PF1
  sta PF2
Top8Lines
  sta WSYNC
  inx
  cpx #8
  bne Top8Lines
  lda #%00010000
  sta PF0
  lda #0
  sta PF1
  sta PF2
  lda #0    ; Modify CTRLPF shadow ram to #%00000000
  sta CTRLPF_shadow; This will turn off mirror mode.
MiddleLines
Alter1stTime
  cpx #96   ; Wait until the 96th scanline to...
  bne Continue
  lda CTRLPF_shadow; ..load new shadow ram copy into real CTRLPF
  sta CTRLPF  
Continue
  sta WSYNC
  inx
  cpx #184
  bne MiddleLines
  lda #%11111111
  sta PF0
  sta PF1
  sta PF2
Bottom8Lines
  sta WSYNC
  inx
  cpx #192
  bne Bottom8Lines
  lda #01   ; Modify CTRLPF shadow ram back to mirror mode.
  sta CTRLPF_shadow; The CTRLPF register will be actualized when the loop begins a new
    ; iteration (near the 'VerticalBlank' label).
  lda #%01000010
  sta VBLANK
  ldx #0
Overscan
  sta WSYNC
  inx
  cpx #30
  bne Overscan
  jmp StartOfFrame
  ORG $FFFA
InterruptVectors
  .word Reset 
  .word Reset 
  .word Reset 
 END
